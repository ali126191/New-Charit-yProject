{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navbar/NavBar.js","webpack:///./src/components/header.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","object","func","NavBar","className","href","class","id","gatsby_link_default","to","Component","Header","siteTitle","components_Navbar_NavBar","react_fontawesome_index_es","icon","faAngleDown","Footer","Fragment","target","Layout","gatsby_browser_entry_StaticQuery","components_header","style","margin","maxWidth","padding","paddingTop","components_Footer_Footer","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-a60f07b70802b67c65bb.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { Component } from \"react\"\r\nimport \"./NavBar.css\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <a href=\"#\" class=\"logo\">\r\n          logo\r\n        </a>\r\n        <ul className=\"main-nav\" id=\"js-menu\">\r\n          <li>\r\n            <Link to=\"#\" className=\"nav-links\">\r\n              home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"#\" className=\"nav-links\">\r\n              about us\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"#\" className=\"nav-links\">\r\n              our services\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"#\" className=\"nav-links\">\r\n              contact Us\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"#\" className=\"nav-links\">\r\n              events\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar","// import { Link } from \"gatsby\"\r\n\r\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport \"./header.css\"\r\nimport NavBar from \"./Navbar/NavBar\"\r\n\r\nconst Header = ({ siteTitle }, props) => (\r\n  <header>\r\n    <NavBar />\r\n    <h3>- Established 1996 -</h3>\r\n    <h1>Shri Vitthal Hindu Mandir</h1>\r\n    <FontAwesomeIcon icon={faAngleDown} />\r\n\r\n  </header>\r\n)\r\n\r\n// let mainNav = document.getElementById(\"js-menu\")\r\n// let navBarToggle = document.getElementById(\"js-navbar-toggle\")\r\n\r\n// navBarToggle.addEventListener(\"click\", () => {\r\n//   mainNav.classList.toggle(\"active\")\r\n// })\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <h3>\r\n          HELPING THE PEOPLE OF THE GREATER TORONTO AREA COME TOGETHER, GROW IN\r\n          FAITH, AND TO CELEBRATE WHAT MAKES CANADA GREAT - OUR DIVERSITY.\r\n        </h3>\r\n        <a\r\n          href=\"https://us4.list-manage.com/subscribe?u=08406db9cc49d8dd58bd3a28a&id=f70b74727c\"\r\n          target=\"_blank\"\r\n        >\r\n          Join us\r\n        </a>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\nimport Footer from \"./Footer/Footer\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nconst Layout = ({ children }, props) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      return (\r\n        <>\r\n          <Header siteTitle={data.site.siteMetadata.title} />\r\n          <div\r\n            style={{\r\n              margin: `0 auto`,\r\n              maxWidth: 1140,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n            }}\r\n          >\r\n            <main>{children}</main>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n\r\n\r\n"],"sourceRoot":""}